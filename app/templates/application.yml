logging:
  level:
    <%= packageroot %>: INFO
    org.springframework.boot.context: INFO
server:
  compression:
    enabled: true
  port: 8080
  servlet: 
    context-path: /<%= artifact %>
<%if (swagger) { %>springfox:
  documentation:
    swagger.v2.path: /v2/api-docs
    info:
      title: 
      description: <%= apptitle %> Docs.
      version: 1.0
    base-package: <%= packageroot %><% } %>
<% if (actuator || metricsinflux) { %>management:
  server:
    port: 9090
  endpoints:
    web:
      exposure:
        include: '*'<% } %>
<% if (metricsinflux) { %>  metrics:
    export:
      influx:
        db: <%= artifact %>
        uri: http://localhost:8086<% } %>
spring:
  messages:
    basename: i18n/messages
<% if (redis) { %>  cache:
    type: redis<% } %>
<% if (rabbit) { %>  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    writeQueue: rabbit-queue
    readQueue: rabbit-dead-queue
    exchange: rabbit-exchange
    connection-timeout: 9000<% } %>
  datasource:
    platform: postgres
    url: jdbc:postgresql://localhost:5433/postgres
    username: postgres
    password: postgresdb@123
    continue-on-error: true
<% if (postgres || mysql) { %>}  jpa:
    database: <%=databaseUpper%>
    database-platform: org.hibernate.dialect.<%=databaseDialect%>
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true<% } %>
datasources: 
<% if (dtsourceinflux) { %>  influxdb: 
    url: 
    username:  
    password: <% } %>
